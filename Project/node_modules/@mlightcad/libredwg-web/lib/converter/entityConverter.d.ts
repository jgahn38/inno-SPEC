import { DwgEntity } from '../database';
import { LibreDwgEx } from '../libredwg';
import { Dwg_Object_Ptr } from '../types';
export declare class LibreEntityConverter {
    libredwg: LibreDwgEx;
    constructor(instance: LibreDwgEx);
    convert(object_ptr: Dwg_Object_Ptr): DwgEntity | undefined;
    private convert3dFace;
    private convertArc;
    private convertEmbeddedMText;
    private convertAttdef;
    private convertCircle;
    private convertAlignedDimension;
    private convert3PointAngularDimension;
    private convertDiameterDimension;
    private convertOrdinateDimension;
    private convertRadiusDimension;
    private convertEllise;
    private convertHatch;
    private convertHatchBoundaryPaths;
    private convertImage;
    private convertInsert;
    private convertLeader;
    private convertLine;
    private convertLWPolyline;
    private convertMLine;
    private convertOle2Frame;
    private convertOleFrame;
    private convertMText;
    private convertPoint;
    private convertPolyline2d;
    private convertRay;
    private convertSection;
    private convertSolid;
    private convertSpline;
    private convertTable;
    private convertTableCells;
    private convertTextBase;
    private convertText;
    private convertTolerance;
    private convertWipeout;
    private convertXline;
    private getDimensionCommonAttrs;
    private getCommonAttrs;
}
//# sourceMappingURL=entityConverter.d.ts.map